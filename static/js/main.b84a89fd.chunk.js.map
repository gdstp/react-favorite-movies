{"version":3,"sources":["store/actions/FavoriteAction.ts","store/types/FavoriteTypes.ts","store/reducers/FavoriteReducer.ts","Context/AppContext.tsx","components/ActionButton/index.tsx","components/Card/index.tsx","components/GridContainer/index.tsx","components/SearchInput/index.tsx","components/TopBar/index.tsx","pages/Favorites.tsx","store/types/MovieTypes.ts","store/reducers/Reducer.ts","components/StateComponent/index.tsx","components/PaginationContainer/index.tsx","hooks/deboucer.tsx","service/api.ts","store/actions/MovieAction.ts","env.ts","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["favoriteMovie","a","Title","Poster","Plot","imdbID","Promise","resolve","storeContent","localStorage","getItem","items","arr","JSON","parse","map","item","push","some","length","setItem","stringify","removeFavorite","loadFavorites","filter","storedContent","StorageInitialState","FavoriteReducer","state","action","type","isLoading","data","error","payload","AppCtx","React","createContext","AppProvider","children","useState","currentMovieName","setCurrentMovieName","likedMovies","setLikedMovies","useReducer","dispatch","Provider","value","movieName","updateMovieName","name","LikeMovie","then","catch","DislikeMovie","ActionButton","onClick","liked","Button","size","color","useStyles","makeStyles","grid","maxWidth","root","height","display","flexDirection","justifyContent","card","margin","backgroundPosition","backgroundSize","footer","alignItems","Card","classes","useContext","Grid","xs","sm","lg","className","CardActionArea","CardMedia","component","alt","image","title","CardContent","Typography","gutterBottom","variant","CardActions","marginTop","GridContainer","container","spacing","theme","createStyles","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchInput","InputBase","placeholder","input","inputProps","onChange","e","target","top","flexGrow","zIndex","menuButton","link","textDecoration","TopBar","AppBar","Toolbar","to","Favorites","Container","style","Alert","severity","OMDBResponseInitialState","Response","Search","totalResults","initialState","reducer","ErrorComponent","msg","LoadingComponent","StateComponent","marginBottom","PaginationContainer","total","currentRenderedPage","Pagination","count","Math","ceil","page","event","useDeboucer","timeout","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","axios","baseURL","fetchData","api","get","Home","laggedValue","setPage","res","err","message","index","currentPage","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b84a89fd.chunk.js","sourcesContent":["import { Storage, StorageInitialState } from '../types/FavoriteTypes'\r\n\r\nexport const favoriteMovie = async ({ Title, Poster, Plot, imdbID }: Storage): Promise<Storage[]> => {\r\n   return new Promise(function (resolve) {\r\n      const storeContent = localStorage.getItem('movies')\r\n      const items = { Title, Poster, Plot, imdbID }\r\n      var parsed: Storage[]\r\n      const arr: Storage[] = []\r\n\r\n      if (storeContent !== null) {\r\n         parsed = JSON.parse(storeContent)\r\n         parsed.map(item => arr.push(item))\r\n      }\r\n\r\n      if (!arr.some(item => item.imdbID === imdbID) && arr.length < 10) {\r\n         arr.push(items)\r\n      }\r\n\r\n      localStorage.setItem('movies', JSON.stringify(arr))\r\n\r\n      resolve(arr)\r\n   })\r\n\r\n}\r\n\r\nexport const removeFavorite = async (imdbID: string): Promise<Storage[]> => {\r\n   return new Promise(function (resolve) {\r\n      const loaded = loadFavorites()\r\n      const arr = loaded.filter(item => item.imdbID !== imdbID)\r\n      localStorage.setItem('movies', JSON.stringify(arr))\r\n      resolve(arr)\r\n   })\r\n}\r\n\r\nexport const loadFavorites = (): Storage[] => {\r\n   const storedContent = localStorage.getItem('movies')\r\n   return storedContent === null ? [] : JSON.parse(storedContent)\r\n}\r\n\r\nexport const getFavoritesInitialState = () => {\r\n   return {\r\n      data: loadFavorites(),\r\n      isLoading: false,\r\n      error: ''\r\n   }\r\n}","export const REQUEST = \"REQUEST\"\r\nexport const SUCCESS = \"SUCCESS\"\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport type Storage = {\r\n   Title: string,\r\n   Poster: string,\r\n   Plot: string,\r\n   imdbID: string\r\n}\r\n\r\nexport type State = {\r\n   data: Storage[],\r\n   isLoading: boolean,\r\n   error: string\r\n}\r\n\r\nexport const StorageInitialState: Storage[] = [{\r\n   Title: '',\r\n   Poster: '',\r\n   Plot: '',\r\n   imdbID: ''\r\n}]\r\n\r\nexport const initialState: State = {\r\n   data: [] as Storage[],\r\n   isLoading: false,\r\n   error: ''\r\n}\r\n\r\ntype RequestAction = {\r\n   type: typeof REQUEST\r\n}\r\n\r\ntype SuccessAction = {\r\n   type: typeof SUCCESS,\r\n   payload: Storage[]\r\n}\r\n\r\ntype FailureAction = {\r\n   type: typeof FAILURE,\r\n   error: string\r\n}\r\n\r\nexport type Action = | RequestAction | SuccessAction | FailureAction","import { Action, State, StorageInitialState } from '../types/FavoriteTypes'\r\n\r\nconst FavoriteReducer = (state: State, action: Action): State => {\r\n   switch (action.type) {\r\n      case 'REQUEST':\r\n         return {\r\n            isLoading: true,\r\n            data: StorageInitialState,\r\n            error: ''\r\n         }\r\n      case 'SUCCESS':\r\n         return {\r\n            isLoading: false,\r\n            data: action.payload,\r\n            error: ''\r\n         }\r\n\r\n      case 'FAILURE':\r\n         return {\r\n            isLoading: false,\r\n            data: StorageInitialState,\r\n            error: action.error\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default FavoriteReducer","import React, { useReducer, useState } from 'react'\r\nimport { favoriteMovie, getFavoritesInitialState, loadFavorites, removeFavorite } from '../store/actions/FavoriteAction'\r\nimport FavoriteReducer from '../store/reducers/FavoriteReducer'\r\nimport { Storage } from '../store/types/FavoriteTypes'\r\n\r\ninterface AppContextInterface {\r\n   movieName: string,\r\n   updateMovieName: (name: string) => void,\r\n   likedMovies: Storage[],\r\n   LikeMovie: ({ Title, Plot, Poster, imdbID }: Storage) => void\r\n   DislikeMovie: (imdbID: string) => void\r\n}\r\n\r\nexport const AppCtx = React.createContext({} as AppContextInterface)\r\n\r\nexport const AppProvider: React.FC = ({ children }) => {\r\n   const [currentMovieName, setCurrentMovieName] = useState('')\r\n   const [likedMovies, setLikedMovies] = useState(loadFavorites())\r\n   const [_, dispatch] = useReducer(FavoriteReducer, getFavoritesInitialState())\r\n\r\n   const updateMovieName = (name: string) => {\r\n      setCurrentMovieName(name)\r\n   }\r\n\r\n   const LikeMovie = ({ Title, Poster, Plot, imdbID }: Storage) => {\r\n      dispatch({ type: \"REQUEST\" })\r\n      favoriteMovie({ Title, Poster, Plot, imdbID })\r\n         .then((payload) => {\r\n            setLikedMovies(payload)\r\n            dispatch({ type: \"SUCCESS\", payload })\r\n         })\r\n         .catch((error) => dispatch({ type: \"FAILURE\", error }))\r\n   }\r\n\r\n   const DislikeMovie = (imdbID: string) => {\r\n      removeFavorite(imdbID)\r\n         .then((payload: Storage[]) => {\r\n            setLikedMovies(payload)\r\n            dispatch({ type: \"SUCCESS\", payload })\r\n         })\r\n         .catch((error) => dispatch({ type: \"FAILURE\", error }))\r\n   }\r\n\r\n   return (\r\n      <AppCtx.Provider\r\n         value={{\r\n            movieName: currentMovieName,\r\n            updateMovieName,\r\n            likedMovies,\r\n            LikeMovie,\r\n            DislikeMovie\r\n         }}\r\n      >\r\n         { children}\r\n      </AppCtx.Provider>\r\n   )\r\n}","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst ActionButton: React.FC<{onClick: () => void, liked: boolean}> = ({ onClick, liked }) => {\r\n   return (\r\n      <Button size=\"small\" color=\"primary\" onClick={onClick}>\r\n         {liked ? 'Like' : 'Dislike'}\r\n      </Button>\r\n   )\r\n}\r\n\r\nexport default ActionButton","import React, { useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card as CardWrapper, Grid } from '@material-ui/core';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ActionButton from '../ActionButton';\r\nimport { AppCtx } from '../../Context/AppContext';\r\nimport { Storage } from '../../store/types/FavoriteTypes';\r\n\r\nconst useStyles = makeStyles({\r\n   grid: {\r\n      maxWidth: 245,\r\n   },\r\n   root: {\r\n      maxWidth: 245,\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between'\r\n   },\r\n   card: {\r\n      margin: 'auto',\r\n      backgroundPosition: 'top center',\r\n      backgroundSize: 'contain'\r\n   },\r\n   footer: {\r\n      alignItems: 'flex-end',\r\n   }\r\n});\r\n\r\nconst Card: React.FC<Storage> = ({ Title, Poster, Plot, imdbID }) => {\r\n   const classes = useStyles();\r\n   const { LikeMovie, likedMovies, DislikeMovie } = useContext(AppCtx)\r\n   const handleClick = () => {\r\n      !likedMovies.some(item => item.imdbID === imdbID) ? \r\n         LikeMovie({ Title, Poster, Plot, imdbID }) : \r\n         DislikeMovie(imdbID)\r\n   }\r\n\r\n   return (\r\n      <Grid item xs={6} sm={4} lg={3} className={classes.grid}>\r\n         <CardWrapper className={classes.root}>\r\n            <CardActionArea>\r\n               <CardMedia\r\n                  component=\"img\"\r\n                  alt={Title}\r\n                  height=\"240\"\r\n                  image={Poster}\r\n                  title={Title}\r\n                  className={classes.card}\r\n               />\r\n               <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                     {Title}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                     {Plot}\r\n                  </Typography>\r\n               </CardContent>\r\n            </CardActionArea>\r\n            <CardActions className={classes.footer}>\r\n               <ActionButton\r\n                  onClick={() => { handleClick() }}\r\n                  liked={!likedMovies.some(item => item.imdbID === imdbID)}\r\n               />\r\n            </CardActions>\r\n         </CardWrapper>\r\n      </Grid>\r\n   )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n   root: {\r\n      marginTop: '88px'\r\n   }\r\n})\r\n\r\nconst GridContainer: React.FC = ({ children }) => {\r\n   const classes = useStyles()\r\n   return (\r\n      <Grid container spacing={1} className={classes.root}>\r\n         <Grid container item xs={12} spacing={3}>\r\n            {children}\r\n         </Grid>\r\n      </Grid>\r\n   )\r\n}\r\n\r\nexport default GridContainer","import React, { useContext } from 'react'\r\nimport { createStyles, fade, InputBase, makeStyles, Theme } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { AppCtx } from '../../Context/AppContext';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n   createStyles({\r\n      search: {\r\n         position: 'relative',\r\n         borderRadius: theme.shape.borderRadius,\r\n         backgroundColor: fade(theme.palette.common.white, 0.15),\r\n         '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n         },\r\n         marginRight: theme.spacing(2),\r\n         marginLeft: 0,\r\n         width: '100%',\r\n         [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n         },\r\n      },\r\n      searchIcon: {\r\n         padding: theme.spacing(0, 2),\r\n         height: '100%',\r\n         position: 'absolute',\r\n         pointerEvents: 'none',\r\n         display: 'flex',\r\n         alignItems: 'center',\r\n         justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n         color: 'inherit',\r\n      },\r\n      inputInput: {\r\n         padding: theme.spacing(1, 1, 1, 0),\r\n         // vertical padding + font size from searchIcon\r\n         paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n         transition: theme.transitions.create('width'),\r\n         width: '100%',\r\n         [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n         },\r\n      },\r\n   }),\r\n);\r\n\r\nconst SearchInput: React.FC = () => {\r\n   const classes = useStyles()\r\n   const { updateMovieName } = useContext(AppCtx)\r\n   return (\r\n      <div className={classes.search}>\r\n         <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n         </div>\r\n         <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n               root: classes.inputRoot,\r\n               input: classes.inputInput,\r\n            }}\r\n            inputProps={{ 'aria-label': 'search' }}\r\n            onChange={(e) => {updateMovieName(e.target.value)}}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SearchInput","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core'\r\nimport SearchInput from '../SearchInput';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n   createStyles({\r\n      root: {\r\n         width: '100%',\r\n         top: 0,\r\n         flexGrow: 1,\r\n         position: 'fixed',\r\n         zIndex: 4\r\n      },\r\n      menuButton: {\r\n         marginRight: theme.spacing(2),\r\n      },\r\n      title: {\r\n         flexGrow: 1,\r\n      },\r\n      link: {\r\n         color: 'white',\r\n         textDecoration: 'none'\r\n      }\r\n   }),\r\n);\r\nconst TopBar: React.FC = () => {\r\n   const classes = useStyles()\r\n   return (\r\n      <div className={classes.root}>\r\n         <AppBar position=\"static\">\r\n            <Toolbar>\r\n               <Typography variant=\"h6\" className={classes.title}>\r\n                  <Link to=\"/\" className={classes.link}>\r\n                     Movies\r\n                  </Link>\r\n               </Typography>\r\n\r\n               <SearchInput />\r\n\r\n               <Link to=\"/favorites\" className={classes.link}>\r\n                  <Button color=\"inherit\">Favorites</Button>\r\n               </Link>\r\n            </Toolbar>\r\n         </AppBar>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default TopBar","import React, { useContext } from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport Card from '../components/Card'\r\nimport GridContainer from '../components/GridContainer'\r\nimport { AppCtx } from '../Context/AppContext'\r\nimport { Alert } from '@material-ui/lab'\r\nimport TopBar from '../components/TopBar'\r\n\r\nconst Favorites: React.FC = () => {\r\n   const { likedMovies } = useContext(AppCtx)\r\n   return (\r\n      <div>\r\n         <TopBar />\r\n         <Container style={{ marginTop: '84px' }}>\r\n            <GridContainer>\r\n               {likedMovies.length === 0 &&\r\n                  <Alert severity=\"info\" style={{ width: '100%' }}>\r\n                     You haven't liked any movie yet.\r\n                  </Alert>\r\n               }\r\n               {likedMovies && likedMovies.map((item) => (\r\n                  <Card\r\n                     key={item.imdbID}\r\n                     Title={item.Title}\r\n                     Poster={item.Poster}\r\n                     imdbID={item.imdbID}\r\n                     Plot={item.Plot}\r\n                  />\r\n               ))}\r\n            </GridContainer>\r\n\r\n         </Container>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Favorites","export const REQUEST = 'REQUEST'\r\nexport const SUCCESS = 'SUCCESS'\r\nexport const FAILURE = 'FAILURE'\r\n\r\nexport type State = {\r\n   data: OMDBResponse,\r\n   isLoading: boolean,\r\n   error: string\r\n}\r\n\r\nexport type OMDBResponse = {\r\n   Response: boolean,\r\n   Search: MovieObject[],\r\n   totalResults: number\r\n}\r\n\r\nexport type MovieObject = {\r\n   Title: string,\r\n   Year: string,\r\n   Rated: string,\r\n   Released: string,\r\n   Runtime: string,\r\n   Genre: string,\r\n   Director: string,\r\n   Writer: string,\r\n   Actors: string,\r\n   Plot: string,\r\n   Poster: string,\r\n   Ratings: { Source: string, Value: string }[],\r\n   Metascore: string,\r\n   imdbRatings: string,\r\n   imdbVotes: string,\r\n   imdbID: string,\r\n   Type: string,\r\n   DVD: string,\r\n   BoxOffice: string,\r\n   Production: string,\r\n   Website: string,\r\n   Response: boolean,\r\n}\r\n\r\nexport const OMDBResponseInitialState = {\r\n   Response: false, \r\n   Search: [] as MovieObject[], \r\n   totalResults: 0\r\n}\r\n\r\nexport const initialState: State = {\r\n   data: OMDBResponseInitialState,\r\n   isLoading: false,\r\n   error: ''\r\n}\r\n\r\ntype RequestAction = {\r\n   type: typeof REQUEST\r\n}\r\n\r\ntype SuccessAction = {\r\n   type: typeof SUCCESS,\r\n   payload: OMDBResponse\r\n}\r\n\r\ntype FailureAction = {\r\n   type: typeof FAILURE,\r\n   error: string\r\n}\r\n\r\nexport type Action = | RequestAction | SuccessAction | FailureAction\r\n// export type Action = | { type: typeof REQUEST } | {\r\n//    type: typeof SUCCESS,\r\n//    payload: OMDBResponse[]\r\n// } | {\r\n//    type: typeof FAILURE,\r\n//    error: string\r\n// }","import { Action, State, OMDBResponseInitialState } from \"../types/MovieTypes\";\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n   switch (action.type) {\r\n      case 'REQUEST':\r\n         return {\r\n            isLoading: true,\r\n            data: OMDBResponseInitialState,\r\n            error: ''\r\n         }\r\n         case 'SUCCESS':\r\n            return {\r\n            isLoading: false,\r\n            data: action.payload,\r\n            error: ''\r\n         }\r\n         case 'FAILURE':\r\n            return {\r\n            isLoading: false,\r\n            data: OMDBResponseInitialState,\r\n            error: action.error\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport './style.css'\r\n\r\nexport const ErrorComponent: React.FC<{ msg: string }> = ({ msg }) => {\r\n   return (\r\n      <div className=\"container\">\r\n         Falhou: {msg}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const LoadingComponent: React.FC = () => {\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst StateComponent: React.FC<{ isLoading: boolean, error: string }> = ({ isLoading, error }) => {\r\n   return (\r\n      <div>\r\n         {isLoading && <LoadingComponent />}\r\n         {error && <ErrorComponent msg={error} />}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default StateComponent","import React from 'react'\r\nimport { Pagination } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n   root: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      marginTop: 25,\r\n      marginBottom: 25,\r\n      justifyContent: 'center'\r\n   }\r\n})\r\n\r\ninterface PaginationInterface {\r\n   total: number,\r\n   onChange: (page: number) => void,\r\n   currentRenderedPage: number\r\n}\r\n\r\nconst PaginationContainer: React.FC<PaginationInterface> = ({ total, onChange, currentRenderedPage }) => {\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <>\r\n         {total && (\r\n            <div className={classes.root}>\r\n               <Pagination\r\n                  count={Math.ceil(total / 10)}\r\n                  variant=\"outlined\"\r\n                  shape=\"rounded\"\r\n                  page={currentRenderedPage}\r\n                  onChange={(event: any, page: number) => { onChange(page) }}\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default PaginationContainer","import { useEffect, useState } from 'react'\r\n\r\nconst useDeboucer = (value: string, timeout: number) => {\r\n   const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n   useEffect(() => {\r\n      const timer = setTimeout(() => {\r\n         setDebouncedValue(value)\r\n      }, timeout)\r\n\r\n      return () => {\r\n         clearTimeout(timer)\r\n      }\r\n   }, [value, timeout])\r\n\r\n   return debouncedValue\r\n}\r\n\r\nexport default useDeboucer","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n   baseURL: \"http://www.omdbapi.com\"\r\n})","import api from \"../../service/api\"\r\nimport { API_KEY } from '../../env'\r\nimport { State } from \"../types/MovieTypes\"\r\n\r\nexport const fetchData = async (movieName: string, page: number): Promise<State> => {\r\n   return api.get(`/?s=${movieName}&page=${page}&apikey=${API_KEY}`)\r\n}\r\n","export const API_KEY = '4edb14d'","import React, { useContext, useEffect, useReducer, useState } from 'react'\r\nimport { Container } from '@material-ui/core';\r\nimport Card from '../components/Card';\r\nimport GridContainer from '../components/GridContainer';\r\nimport { AppCtx } from '../Context/AppContext';\r\nimport reducer from '../store/reducers/Reducer';\r\nimport { initialState } from '../store/types/MovieTypes';\r\nimport StateComponent from '../components/StateComponent';\r\nimport PaginationContainer from '../components/PaginationContainer';\r\nimport useDeboucer from '../hooks/deboucer';\r\nimport TopBar from '../components/TopBar';\r\nimport { fetchData } from '../store/actions/MovieAction';\r\n\r\nconst Home: React.FC = () => {\r\n   const { movieName } = useContext(AppCtx)\r\n   const [{ isLoading, error, data }, dispatch] = useReducer(reducer, initialState)\r\n   const laggedValue = useDeboucer(movieName, 1000)\r\n   const [page, setPage] = useState(1)\r\n\r\n   useEffect(() => {\r\n      dispatch({ type: 'REQUEST' })\r\n      fetchData(laggedValue, page)\r\n         .then((res) => dispatch({ type: 'SUCCESS', payload: res.data }))\r\n         .catch((err) => dispatch({ type: 'FAILURE', error: err.message }))\r\n   }, [laggedValue, page])\r\n\r\n   useEffect(() => {\r\n      setPage(1)\r\n   }, [movieName])\r\n\r\n   return (\r\n      <div>\r\n         <TopBar />\r\n         <Container style={{ marginTop: '24px' }}>\r\n            <StateComponent\r\n               isLoading={isLoading}\r\n               error={error}\r\n            />\r\n\r\n            <GridContainer>\r\n               {data.Search && data.Search.map((item, index) => (\r\n                  <Card\r\n                     key={index}\r\n                     Title={item.Title}\r\n                     Poster={item.Poster}\r\n                     Plot={item.Plot}\r\n                     imdbID={item.imdbID}\r\n                  />\r\n               ))}\r\n            </GridContainer>\r\n\r\n            <PaginationContainer\r\n               total={data.totalResults}\r\n               onChange={(currentPage) => setPage(currentPage)}\r\n               currentRenderedPage={page}\r\n            />\r\n         </Container>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { AppProvider } from './Context/AppContext';\nimport Favorites from './pages/Favorites';\nimport Home from './pages/Home';\n\nimport './styles.css'\n\nfunction App() {\n  return (\n    <AppProvider>\n      <BrowserRouter basename =\"/directory-name\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/favorites\" component={Favorites} />\n        </Switch>\n      </BrowserRouter>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}